"3.2 p(created: 2011/06/03 11:51:34)

"source! /Users/iori/.vimperatorrc.local

echo "loading..."
autocmd VimperatorEnter .*pluginmanager update
set titlestring="vimperator"

"color
"================================================================================
"colorscheme sweets
colorscheme thunderstone

" keymappings
"================================================================================
"
nnoremap j 5j
nnoremap k 5k
nnoremap J <C-d>
nnoremap K <C-u>

" select next/previous tab
nnoremap l gt
nnoremap h gT

" move tab position
nnoremap <C-l> :tabmove! +1<CR>
nnoremap <C-h> :tabmove! -1<CR>

" glance through a tab
nnoremap . b

" links open always new tabs
nnoremap f F
nnoremap F f

" close tab
nnoremap D d
nnoremap d D

" open successive new tab
nnoremap <C-f> ;F

" reaload .vimperatorrc
map ,r :source ~/.vimperatorrc<CR>

" reset Firefox
map <C-r> :reset

" change page encoding
nnoremap ,es :set encoding=Shift_JIS<CR>
nnoremap ,ei :set encoding=ISO-2022-JP<CR>
nnoremap ,eu :set encoding=UTF-8<CR>
nnoremap ,ec :set encoding=EUC-JP<CR>

"create new tab
nnoremap <C-t> :tabopen<CR>

" yank
nnoremap <C-c> Y

" clear highlight
nnoremap 0 :nohlsearch<CR>

"view source
map v :viewsource<CR>

" search
nnoremap s :set<SPACE>cpt=s<CR>:tabopen<SPACE>google<SPACE>
nnoremap S :set<SPACE>cpt=s<CR>:tabopen<SPACE>
nnoremap t :set<SPACE>cpt=lt<CR>:tabopen<SPACE>
nnoremap o :set<SPACE>cpt=lt<CR>:open<SPACE>

" readbility
map R :js Readability.enableREADABILITY({target: {id: 'readability-statusbar-icon'}})<CR>

" Evernote
" command clip javascript Evernote.Overlay.init(null)

" move EverNote Button to StatusBar
:javascript << EOF
(function(){
    const icon = "data:image/png;base64,"
+"iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAe0lEQVR42mNgAIL8rWb/ycEMlGiG"
+"G0JVA5r2B/5/8/UJTrznzkL8BlTucv6/6caU/19/ffoPAiA2DIPECBoAwyDbQADkImQxigwgKRBh"
+"BiB7AeQ9kg1ADsCeI3GkG0CxF5ANePTh+v/zz/aQH40gQNAAihPSwOQFSrMzAO/elnCicYCmAAAA"
+"AElFTkSuQmCC"

    var listener = function(){
        Evernote.Overlay.init(null)
    }

    var StatusBarPanel = document.createElement('statusbarpanel');
    StatusBarPanel.setAttribute('id','webclipper3-button-clone');
    StatusBarPanel.setAttribute('class','statusbarpanel-iconic');
    StatusBarPanel.setAttribute('src',icon);
    StatusBarPanel.addEventListener('click',listener,true);
    document.getElementById('status-bar').insertBefore(StatusBarPanel,
        document.getElementById('RIL_offlineProgress'));
})();
EOF

" options
"================================================================================
"
set guioptions=rb

" complement
set wildoptions=auto
set complete=stl

" search engines
set defsearch=google
set suggestengines=google

" stop beep
set visualbell
highlight Bell display:none

" link's uri display on status line
set showstatuslinks=1

" ignore page access token
set! ui.key.generalAccessKey=0

" disable focus on search window
set focuscontent

" set bold and don't lose sight of carret position 
set! ui.caretWidth=5

" hilight on search result
set hlsearch
set insearch

" charactor search
set hintchars=hjklasdfgyuiopqwertnmzxcvb

" others
================================================================================
" ime off
:style -name commandline-ime chrome://* #liberator-commandline-command input {ime-mode: inactive;}

" commands
"================================================================================
command clip javascript Evernote.Overlay.init(null)

" サイト内検索 (:ss)
javascript << EOM
commands.addUserCommand(
    ['sitesearch', 'ss'], 'Search in this site.',
    function(word){
        liberator.open("http://www.google.co.jp/search?hl=ja&q="+encodeURIComponent(word)+"+site%3A"+window.content.location.hostname);}
);
EOM

" plugins
"================================================================================
" smooziee.js
let g:smooziee_scroll_amount=350
let g:smooziee_scroll_interval=25

" copy,js
javascript <<EOM
liberator.globalVariables.copy_templates = [
    { label: 'titleAndURL',    value: '%TITLE%\n%URL%'},
    { label: 'title',          value: '%TITLE%'},
    { label: 'anchor',         value: '<a href="%URL%">%TITLE%</a>'},
    { label: 'selanchor',      value: '<a href=%URL% title="%TITLE%">%SEL%</a>'},
    { label: 'htmlblockquote', value: '<blockquote cite="%URL%" title="%TITLE%">%HTMLSEL%</blockquote>%'},
    { label: 'markdown',       value: '[%SEL%](%URL%"%TITLE%")'},
    { label: 'ASIN',           value: 'copy ASIN code from Amazon', custom: function()content.document.getElementById('ASIN').value},
    { label: 'bitURL',         value: '%bitURL%', custom: function() { return util.httpGet('http://bit.ly/api?url=' + encodeURIComponent(buffer.URL)).responseText;}}
];    
EOM
nnoremap ,cb :copy<Space>bitURL<CR>
nnoremap ,cA :copy<Space>ASIN<CR>

" seedSomeKey_3.js
"command! -nargs=+ lazy autocmd VimperatorEnter .* <args>
"lazy fmaps -u='mail\.google\.com/mail' c / y j k n p o u e x s r a # [ ] z * ? gl gi gs gt gd ga gc
"lazy fmaps -u='www\.google\.(co\.jp|com)/reader' -events=vkeypress j k n o p m s v A r S N P X O gh ga gs gt gu u / ? J K


" nextlink.js
let g:nextlink_followlink = "true"

"" hatenabookmark
" https://github.com/hatena/hatena-bookmark-xul/wiki/Vimperator-%E3%81%A7%E3%81%AF%E3%81%A6%E3%81%AA%E3%83%96%E3%83%83%E3%82%AF%E3%83%9E%E3%83%BC%E3%82%AF%E6%8B%A1%E5%BC%B5%E3%82%92%E4%BD%BF%E3%81%86
javascript if (typeof hBookmark != 'undefined') liberator.loadScript('chrome://hatenabookmark/content/vimperator/plugin/hatenabookmark.js', {__proto__: this});
" nnoremap s :hbt<Space>
" nnoremap S :hbtc<Space>
set complete+=H

"================================================================================
echo "vimperator: Welcome back."
" vim: set ft=vimperator:
